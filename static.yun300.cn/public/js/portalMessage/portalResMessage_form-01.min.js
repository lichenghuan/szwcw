$define(["wgt_util", "jquery.formValidate", "md5", "jquery.message", "laydate", "https://pv.sohu.com/cityjson?ie=utf-8"], function(w, t, e, a, i, r, n) {
    var T = function(e, a, t, i, r, n, s) {
        var o = {};
        o.request_url = t, o.url_param = i, o.requst_type = r || "GET";
        var c = encodeURIComponent(encodeURIComponent(JSON.stringify(o))),
            d = w.md5Sign(JSON.stringify(o));
        w.ajax({
            type: "POST",
            url: "/comp/portalRouter",
            async: s || s === undefined,
            data: {
                param: c,
                sign: d
            },
            success: function(t) {
                n(t, e, a)
            },
            error: function() {
                getFailPop(e, "操作失败！")
            }
        })
    };
    return {
        init: function() {
            var m = this._params,
                l = $compCl.getScope(m.id),
                h = (m.CorrectRequired && m.CorrectRequired, m.DataFailed && m.DataFailed, !0),
                v = !0,
                o = "",
                i = '<div class="e_LoginPrompt p_LoginPrompt corlor_warning" data-ename="表单错误提示语"><i class="iconfont icon-error"></i><span class="text-error color_error">手机号码不能为空或格式不正确！</span></div>',
                g = !1;

            function _(t, e) {
                e.removeClass("success").addClass("error"), e.find(".p_LoginPrompt").remove().end().append(i), e.find(".text-error").text(t.attr("data-error")), t.data("status", 0)
            }

            function y(t, e, a) {
                if (e.removeClass("success").addClass("error"), e.find(".p_LoginPrompt").remove().end().append(i), e.find(".text-error").text(a), "" != e.find(".text-error").text(a)) return o = a;
                t.data("status", 0)
            }
            var C = function(t, e) {
                return e.removeClass("error").addClass("success"), e.find(".p_LoginPrompt").remove().end().append(i), e.find(".text-error").text(""), o = ""
            };

            function c(i) {
                var t = i.val(),
                    r = i.parent(),
                    e = i.attr("name"),
                    a = i.attr("data-type"),
                    n = i.attr("data-subType"),
                    s = (t.length, /^[1-9]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$/),
                    o = i.attr("tit"),
                    c = !1;
                if ("true" == i.attr("data-required") ? t && "" != t.trim() ? c = !0 : (y(i, r, o + m.mp), h = !1) : t && "" != t.trim() ? c = !0 : (function f(t, e) {
                        e.removeClass("error success"), e.find(".p_LoginPrompt").remove()
                    }(0, r), h = !1), c) {
                    if (C(i, r), 1 == a && (2 == n ? /^[0-9]*$/.test(t) ? C(i, r) : (y(i, r, m.number), h = !1) : 3 == n ? (window.tenant.foreign ? new RegExp : /^1[0-9]{10}$/).test(t) ? C(i, r) : (y(i, r, m.correct + o + m.hm), h = !1) : 4 == n ? /^[0-9-()（）]{7,18}$/g.test(t) ? C(i, r) : (y(i, r, m.correct + o + m.hm), h = !1) : 5 == n ? /(^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$)/g.test(t) ? C(i, r) : (y(i, r, m.correctG + o), h = !1) : 6 == n ? s.test(t) || "" != t ? C(i, r) : (y(i, r, m.correctG + o), h = !1) : 7 == n && (s.test(t) || "" != t ? C(i, r) : (y(i, r, m.correctG + o), h = !1))), "captchas" == e) {
                        var d = "/interactionApi/captcha/checkCaptcha",
                            p = {
                                captchaId: l.find(".p_image img").attr("data-id"),
                                code: t
                            };
                        T(l, m, d, {
                            formData: p
                        }, "GET", function(t) {
                            if (!t.data || "" === t.data) return _(i, r), void(h = !1);
                            var e = JSON.parse(t.data);
                            if ("101" == (e = JSON.parse(t.data)).status) {
                                var a = "1" == e.data.code;
                                a ? (g = !0, C(i, r)) : (g = h = !1, _(i, r))
                            } else _(i, r), h = !1
                        }, !1)
                    }
                    if ("phoneCode" == e || "mailCode" == e) {
                        d = "/interactionApi/member/account/checkVerifyCode";
                        var u = "";
                        u = "phoneCode" == e ? i.parents(".p_aaa").find(".p_PhoneBox input").val() : i.parents(".p_aaa").find(".p_EmailBox input").val(), p = {
                            compType: m.id,
                            verifyName: u,
                            verifyType: "SMS",
                            verifyValue: t
                        }, "mailCode" == e && (p.verifyType = "EMAIL"), T(l, m, d, p, "GET", function(t) {
                            if (!t.data || "" === t.data) return _(i, r), void(v = h = !1);
                            var e = JSON.parse(t.data);
                            "101" == e.status ? "2000" == e.data.status ? (C(i, r), v = !0) : (v = h = !1, _(i, r)) : (_(i, r), h = !1)
                        })
                    }
                }
                return h
            }
            var t = function(i, t) {
                var e = {
                    compId: t.id
                };
                T(i, t, "/interactionApi/captcha/getCaptcha", e, "CET", function r(t) {
                    if (t.data && "" !== t.data) {
                        var e = JSON.parse(t.data);
                        if ("101" == e.status) {
                            var a = i.find(".p_image img");
                            a.attr("src", e.data.imgSrc), a.attr("data-id", e.data.captchaId)
                        }
                    }
                })
            };
            t(l, m);
            var e = l.find(".p_image");
            e.off("click"), e.on("click", function() {
                    t(l, m)
                }),
                function s(t, e) {
                    t.find(".p_date").each(function() {
                        var t = "#" + w(this).attr("id"),
                            e = w(this);
                        laydate.render({
                            elem: t,
                            done: function(t) {
                                c(e)
                            }
                        })
                    }), t.find(".p_dateTime").each(function() {
                        var t = "";
                        t = w(this).attr("id") != undefined ? "#" + w(this).attr("id") : "#" + w(this).find(".InputText").attr("id");
                        var e = w(this);
                        laydate.render({
                            elem: t,
                            type: "datetime",
                            done: function(t) {
                                c(e)
                            }
                        })
                    })
                }(l), l.find(".e_box .e_droplist").off("click").on("click", ["li", "input", ".shape"], function(t) {
                    t.stopPropagation(), window.e = t;
                    var e = w(this).closest(".p_selectC"),
                        a = (w(this), w(this).closest(".e_box")),
                        i = a.find(".e_droplist"),
                        r = a.find(".shape"),
                        n = i.find(".itembox"),
                        s = t.target.tagName.toLowerCase(),
                        o = function() {
                            r.removeClass("clicked"), n.addClass("item_hide"), a.css({
                                overflow: "hidden"
                            }), i.removeClass("hover"), w(document).off("click")
                        };
                    if ("input" === s || w(t.target).hasClass("shape")) return t.stopPropagation(), r.hasClass("clicked") ? o() : (r.addClass("clicked"), n.removeClass("item_hide"), a.css({
                        overflow: "visible"
                    }), i.addClass("hover"), w(document).on("click", o)), !1;
                    var c = w(t.target).closest("li"),
                        d = c.text().trim(),
                        p = c.attr("idx");
                    i.find("input").val(d), a.find("input.d_select").val(p).data("status", 1), e.removeClass("error").addClass("success"), o()
                }), l.find(".e_box").off("click").on("click", ".e_checkbox", function(t) {
                    var e = w(this).closest(".e_box");
                    0 < e.find("input[type='checkbox']:checked").length ? e.find("input").data("status", 1) : e.find("input").data("status", 0)
                }), l.on("blur", ".InputText:visible", function() {
                    c(w(this))
                }), l.find("input[type='radio']").data("status", 1);
            var r, n, a;
            n = m, (a = (r = l).find(".p_sendBtn")).off("click"), a.each(function() {
                w(this).on("click", function() {
                    var a = w(this),
                        t = "";
                    t = w(this).hasClass("mailBtn") ? w(this).parent().parents(".p_aaa").find(".p_EmailBox") : w(this).parent().parents(".p_aaa").find(".p_PhoneBox");
                    var e = {
                        compType: n.id,
                        verifyType: "SMS",
                        verifyName: t.find("input").val()
                    };
                    return w(this).hasClass("mailBtn") && (e.verifyType = "EMAIL"), (!t.find(".corlor_warning .color_error") || "" == t.find(".corlor_warning .color_error").text()) && ("" == t.find("input").val() ? (t.find("input").trigger("blur"), !1) : void T(r, n, "/interactionApi/member/account/sendVerify", e, "GET", function(t) {
                        if (t.data && "" !== t.data) {
                            var e = JSON.parse(t.data);
                            "101" == e.status || y(a.parent(), a.parent().prev(), e.msg)
                        }
                    }))
                })
            });
            var d = function(t, e, a) {
                    if (!(0 < e.find("input[name=captchas]").length) || e.find("input[name=captchas]").val())
                        if (t.data && "" !== t.data) {
                            var i = JSON.parse(t.data);
                            if ("101" == i.status) {
                                var r = i.data;
                                "1" == r.code ? (w.message({
                                    type: "success",
                                    msg: a.success
                                }), setTimeout(function() {
                                    var t = a.submitUrl,
                                        e = a.submitTarget;
                                    "" == t ? window.location.reload() : "_blank" == e ? window.open(t) : window.location.href = t
                                }, 500), k = !1) : "-3" == r.code ? w.message({
                                    type: "error",
                                    msg: function n() {
                                        var t = "";
                                        switch (tenant.language) {
                                            case "zh_CN":
                                                t = "为避免相同数据重复提交，建议您一分钟后再试。";
                                                break;
                                            case "zh_HN":
                                                t = "為避免相同數據重複提交，建議您一分鐘後再試。";
                                                break;
                                            case "de":
                                                t = "Um die gleichen Daten nicht zu wiederholen, empfiehlt es sich, in einer Minute erneut zu versuchen.";
                                                break;
                                            case "en":
                                                t = "To avoid duplicate submission of the same data, it is recommended that you try again in a minute.";
                                                break;
                                            case "es":
                                                t = "Para evitar la repetición de los mismos datos, se recomienda intentarlo en un minuto.";
                                                break;
                                            case "fr":
                                                t = "Pour éviter la répétition des mêmes données, il est recommandé que vous réessayez dans cinq minutes.";
                                                break;
                                            case "ja":
                                                t = "同じデータが重複しないように、1分後に再試行することをおすすめします。";
                                                break;
                                            case "ko":
                                                t = "같은 데이터가 반복되는 것을 피하기 위해서 1분 후에 다시 시도할 것을 건의합니다.";
                                                break;
                                            case "pt":
                                                t = "Para evitar a submissão duplicada DOS mesmos dados, recomenda-se que você tente novamente EM um minuto.";
                                                break;
                                            case "ru":
                                                t = " во избежание повторения одних и тех же данных рекомендуется попробовать через минуту."
                                        }
                                        return t
                                    }()
                                }) : w.message({
                                    type: "error",
                                    msg: a.submitError
                                })
                            } else w.message({
                                type: "error",
                                msg: a.submitError
                            })
                        } else w.message({
                            type: "error",
                            msg: a.submitError
                        })
                },
                p = !0,
                u = !0,
                f = !0,
                x = !0,
                k = !0,
                b = !0;
            l.off("click", ".p_submit"), l.on("click", ".p_submit", function() {
                var t = !1;
                if (l.find(".p_LoginPrompt").each(function() {
                        "" !== w(this).find(".color_error").text() && (t = !0)
                    }), !t) {
                    var e, a, i, r;
                    if (e = "/comp/touch/cfrs", a = {}, i = "GET", r = function(t) {
                            b = 200 == t.code
                        }, w.ajax({
                            type: i,
                            url: e,
                            dataType: "json",
                            async: !1,
                            data: a,
                            success: function(t) {
                                r(t)
                            },
                            error: function(t) {}
                        }), !k) return !1;
                    var n = {},
                        s = {
                            compId: m.id
                        };
                    l.find(".p_itemBox").length, l.find(".InputText:visible").each(function() {
                        var t = w(this).parent(),
                            e = w(this).attr("name");
                        if (e) {
                            var a = w(this).attr("tit"),
                                i = w(this).val();
                            if (s[e] = i, "true" == w(this).attr("data-required")) {
                                if ("" != o) return u = !(p = !1), p;
                                if ("" == i) return n[e] = w(this).data("status"), y(w(this), t, a + m.mp), u = !(p = !1), p;
                                n[e] = i, c(w(this)), u = p = !0
                            } else "" != i && (n[e] = i, c(w(this))), u = p = !0
                        }
                    }), l.find(".p_SectorBox").each(function() {
                        var e = w(this).find(".d_select").attr("data-required"),
                            a = w(this).find(".p_selectC"),
                            i = w(this).find(".d_select").attr("tit"),
                            r = w(this).find("select.InputText");
                        r.each(function() {
                            var t = w(this).parent().prev().attr("name");
                            "请选择" != w(this).val() ? (n[t] = r.map(function() {
                                return w(this).val()
                            }).get().join(","), u = !0) : "true" == e && (y(w(this), a, i + m.mp), u = !1)
                        })
                    }), l.find(".p_GenderBox").each(function() {
                        var e = w(this).find("input[type='radio']:checked");
                        f && 0 == e.length ? f = "false" == l.find(".p_GenderBox input").attr("data-required") || (w.message({
                            msg: m.CorrectRequired,
                            type: "error"
                        }), !1) : w(this).find("input[type='radio']").each(function() {
                            var t = w(this).attr("name");
                            w(this).prop("checked") && (n[t] = e.map(function() {
                                return w(this).val()
                            }).get().join(","), 0 == e.length ? radioFlag2 = !1 : radioFlag2 = !0)
                        })
                    }), l.find(".p_checkboxContainerBox").each(function() {
                        var e = w(this).find("input[type='checkbox']:checked");
                        p && 0 == e.length ? x = "false" == l.find(".p_checkboxContainerBox input").attr("data-required") || (w.message({
                            msg: m.CorrectRequired,
                            type: "error"
                        }), !1) : w(this).find("input[type='checkbox']").each(function() {
                            var t = w(this).attr("name");
                            w(this).prop("checked") && (n[t] = e.map(function() {
                                return w(this).val()
                            }).get().join(","), x = !0)
                        })
                    }), n.selectId = m.selectId, l.find("input[type='radio']").each(function() {
                        var t = w(this).attr("name");
                        n[t] = l.find("input:radio[name=" + t + "]:checked").val()
                    }), n.messageId = l.find("#categoryId").val(), n.captchas = l.find("input[name=captchas]").val(), n.captchaId = l.find(".p_image img").attr("data-id"), n.realIP = returnCitySN.cip, 0 != l.find("input[name=captchas]").length || n.captchas != undefined && "undefined" != n.captchas || (g = !0), l.find(".InputText").each(function() {
                        var t = w(this);
                        "phoneCode" != t.attr("name") && "mailCode" != t.attr("name") || c(t)
                    }), 0 == [].length && p && u && f && x && g && v && b && (l.find(".p_LoginPrompt").remove(), T(l, m, "/interactionApi/message/add", {
                        formData: n
                    }, "POST", d, !1))
                }
            })
        }
    }
});